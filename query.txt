-- 1. Selezionare tutte le software house americane (3)
SELECT * 
FROM software_houses 
WHERE country = 'United States';

-- 2. Selezionare tutti i giocatori della cittÃ  di 'Rogahnland' (2)
SELECT * 
FROM players 
WHERE city = 'Rogahnland';

-- 3. Selezionare tutti i giocatori il cui nome finisce per "a" (220)
SELECT * 
FROM players 
WHERE name LIKE '%a';

-- 4. Selezionare tutte le recensioni scritte dal giocatore con ID = 800 (11)
SELECT * 
FROM reviews 
WHERE player_id = 800;


-- 5. Contare quanti tornei ci sono stati nell'anno 2015 (9)
SELECT * 
FROM tournaments 
WHERE year = 2015;


-- 6. Selezionare tutti i premi che contengono nella descrizione la parola 'facere' (2)
SELECT * 
FROM awards 
WHERE description LIKE '%facere%';

-- 7. Selezionare tutti i videogame che hanno la categoria 2 (FPS) o 6 (RPG), mostrandoli una sola volta (del videogioco vogliamo solo l'ID) (287)
SELECT DISTINCT videogame_id 
FROM category_videogame 
WHERE category_id = 2 OR category_id = 6;


-- 8. Selezionare tutte le recensioni con voto compreso tra 2 e 4 (2947)
SELECT * 
FROM reviews 
WHERE rating BETWEEN 2 AND 4;


-- 9. Selezionare tutti i dati dei videogiochi rilasciati nell'anno 2020 (46)
SELECT * 
FROM videogames 
WHERE YEAR(release_date) = 2020;

-- 10. Selezionare gli id dei videogiochi che hanno ricevuto almeno una recensione da stelle, mostrandoli una sola volta (443)
SELECT DISTINCT videogame_id 
FROM reviews 
WHERE rating >= 5;


-- 1. Contare quante software house ci sono per ogni paese (3)
SELECT country, COUNT(*) 
FROM software_houses 
GROUP BY country;

-- 2. Contare quante recensioni ha ricevuto ogni videogioco (del videogioco vogliamo solo l'ID) (500)
SELECT videogame_id, COUNT(*) 
FROM reviews
GROUP BY videogame_id;

-- 3. Contare quanti videogiochi hanno ciascuna classificazione PEGI (della classificazione PEGI vogliamo solo l'ID) (13)
SELECT pegi_label_id, COUNT(*) 
FROM pegi_label_videogame 
GROUP BY pegi_label_id;


-- 4. Mostrare il numero di videogiochi rilasciati ogni anno (11)
SELECT YEAR(release_date), COUNT(*) 
FROM videogames 
GROUP BY YEAR(release_date);

-- 5. Contare quanti videogiochi sono disponibili per ciascun device (del device vogliamo solo l'ID) (7)
SELECT device_id, COUNT(*) 
FROM device_videogame 
GROUP BY device_id;

-- 6. Ordinare i videogame in base alla media delle recensioni (del videogioco vogliamo solo l'ID) (550)
SELECT videogame_id, AVG(rating) 
FROM reviews
GROUP BY videogame_id
ORDER BY AVG(rating) DESC;


-- 1. Selezionare i dati di tutti i giocatori che hanno scritto almeno una recensione, mostrandoli una sola volta (996)
SELECT DISTINCT p.*
FROM players p
JOIN reviews r ON p.id = r.player_id;

-- 2. Selezionare tutti i videogiochi dei tornei tenuti nel 2016, mostrandoli una sola volta (226)
SELECT DISTINCT vg.name
FROM videogames vg
JOIN tournament_videogame tg ON vg.id = tg.videogame_id
JOIN tournaments t ON t.id = tg.tournament_id
WHERE t.year = 2016;

-- 3. Mostrare le categorie di ogni videogioco (1718)
SELECT vg.id, c.name
FROM videogames vg
JOIN category_videogame cv ON vg.id = cv.videogame_id
JOIN categories c ON c.id = cv.category_id;

-- 4. Selezionare i dati di tutte le software house che hanno rilasciato almeno un gioco dopo il 2020, mostrandoli una sola volta (6)
SELECT DISTINCT sh.*
FROM software_houses sh
JOIN videogames vg ON sh.id = vg.software_house_id
WHERE YEAR(vg.release_date) > 2020;


-- 5. Selezionare i premi ricevuti da ogni software house per i videogiochi che ha prodotto (55)
SELECT sh.id, sh.name, a.name
FROM software_houses sh
JOIN videogames vg ON sh.id = vg.software_house_id
JOIN award_videogame av ON vg.id = av.videogame_id
JOIN awards a ON a.id = av.award_id;

-- 6. Selezionare categorie e classificazioni PEGI dei videogiochi che hanno ricevuto recensioni da 4 e 5 stelle, mostrandole una sola volta (3363)
SELECT DISTINCT c.name, pl.id
FROM reviews r
JOIN videogames vg ON r.videogame_id = vg.id
JOIN category_videogame cv ON vg.id = cv.videogame_id
JOIN categories c ON c.id = cv.category_id
JOIN pegi_label_videogame pl ON vg.id = pl.videogame_id
WHERE r.rating IN (4, 5);

-- 7. Selezionare quali giochi erano presenti nei tornei nei quali hanno partecipato i giocatori il cui nome inizia per 'S' (474)
SELECT DISTINCT vg.name
FROM videogames vg
JOIN tournament_videogame tv ON vg.id = tv.videogame_id
JOIN tournaments t ON t.id = tv.tournament_id
JOIN player_tournament pt ON pt.tournament_id = t.id
JOIN players p ON p.id = pt.player_id
WHERE p.name LIKE 'S%';